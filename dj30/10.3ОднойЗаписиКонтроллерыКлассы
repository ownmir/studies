╔═══════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║    =detail=                                                                                                   ║
║    SingleObjectMixin поиск записи, наследуется от ContextMixin (10.2БазовыеКонтроллерыКлассы.txt)             ║
║    ─────────────────                                                                                          ║
║    Задачи:                                                                                                    ║
║    1) извлекает из полученного интернет адреса ключ или слаг записи;                                          ║
║    2) ищет запись в заданной модели по полученному ключу или слагу;                                           ║
║    3) помещает найденную запись в контекст щаблона                                                            ║
║    Атрибуты:                                                                                                  ║
║    - model                                                                                                    ║
║    - queryset либо диспетчер записей (Manager), либо набор записей (QuerySet), где будут искаться записи      ║
║        (см get_queryset)                                                                                      ║
║    - pk_url_kwarg задает имя URL-параметра, через который контроллер-класс получит ключ записи                ║
║    (по умолчанию pk)                                                                                          ║
║    - slug_field имя поля модели, в которой хранится слаг (по ум-ю "slug")                                     ║
║    	(см get_slug_field)                                                                                     ║
║    - slug_url_kwarg задает имя URL-параметра, через который контроллер-класс получит слаг (по ум-ю "slug")    ║
║    - query_pk_and_slug что если ключ записи не был найден в интернет-адресе. Если зн-е - False - воз-         ║
║    	буждается исключение AttributeError, Если True - будет выполнена попытка найти запись по слагу (если    ║
║    	он присутствует - иначе AttributeError                                                                  ║
║    - context_object_name имя переменной контекста шаблона, где будет сохранена найденная запись               ║
║    	по ум-ю None (см get_context_object_name)                                                               ║
║                                                                                                               ║
║    Методы:                                                                                                    ║
║    -- get_queryset(self) должен возвращать QuerySet в котором будет выполняться поиск записи.                 ║
║        по ум-ю возвращает значение атрибута queryset, если оно задано, или набор записей из модели,           ║
║        заданной в model                                                                                       ║
║    -- get_slug_field(self) должен возвращать  стороку с именем поля для слага                                 ║
║        по ум-ю возвращает значение атрибута slug_field                                                        ║
║    -- get_context_object_name(self, obj) должен возвращать имя переменной контекста шаблона, где будет        ║
║        сохранена найденная запись (строка). В параметре obj - объект записи.                                  ║
║        по ум-ю возвращает context_object_name. Если там None, возвращает имя модели в нижнем регистре \       ║
║        (Rubric - rubric)                                                                                      ║
║                                                                                                               ║
║    -- get_object(self, queryset=None) возвращает запись, найденную по указанным критериям. В queryset         ║
║        передается набор, в котором должен выполняться поиск.                                                  ║
║        по ум-ю ищет запись в наборе из queryset или из get_queryset. Значения ключа и слага получает          ║
║        из словаря kwargs( его создает метод setup() (10.2БазовыеКонтроллерыКлассы.txt), а имена необходимых   ║
║        URL-параметров - из pk_url_kwarg и slug_url_kwarg. Если запись не найдена исключение Http404           ║
║                                                                                                               ║
║    -- get_context_data(self, kwargs) - переопределенный метод, создающий и возвращающий контекст шаблона      ║
║        по ум-ю требует, чтобы в экземпляре текущего контроллера-класса  присутствовал атрибут object,         ║
║        хранящий найденную запись или None, если таковая не была найдена, а также если контроллер используется ║
║        для создания новой записи. В контексте шаблона создает переменную object и переменную с именем,        ║
║        возвращенным методом get_context_object_name (), обе переменные хранят найденную запись.               ║
║                                                                                                               ║
║    SingleObjectTemplateResponseMixin наследуется от TemplateResponseMixin, выполняет рендеринг шаблона        ║
║    ───────────────────────────────── на основе записи, найденной в моделе. Он требует, чтобы                  ║
║        в контроллере-классе был атрибут object, где хранится либо найденная запись в виде объекта модели,     ║
║        либо None, если запись не была найдена, а также если контроллер используется для создания новой записи.║
║    - template_name_field содержит имя поля модели, где хранится путь к шаблону.                               ║
║        Если None, то путь к шаблону не будет извлекаться из записи модели (поведение по ум-ю)                 ║
║    - template_name_suffix - хранит строку с суффиксом, который будет добавлен к автоматически                 ║
║        сгенерированному пути к шаблону (по ум-ю "_detail")                                                    ║
║    -- get_templates_names(self) переопределенный метод, возвращающий строковый список путей к шаблонам        ║
║        По ум-ю возвращает список:                                                                             ║
║        1) либо из пути, извлеченного из унаследованного атрибута template_name, если этот путь указан;        ║
║        2) либо из:                                                                                            ║
║               2.1) пути, извлеченного из поля модели, имя которого хранится в атрибуте template_name_field,   ║
║               если все необходимые данные (имя поля, запись модели и сам путь в поле этой записи) указаны;    ║
║               2.2) пути вида <<k>псевдоним приложения>\(/ в Linux)<имя модели><суффикс>.html</k>              ║
║               (так, для модели из приложения будет сформирован путь bboard\bb_detail)                         ║
╟───────────────────────────────────────────────────────────────────────────────────────────────────────────────╢
║    DetailView: Все вместе Наследует классы View, SingleObjectMixin и SingleObjectTemplateResponseMixin        ║
║    ──────────             Ищет запись по полученным значениям ключа или слага, заносит её в атрибут object    ║
║       (чтобы успешно работали наследуемые им примеси) и выводит на экран страницу с содержимым этой записи.   ║
║       Код BbDetailView выводящего страницу с содержимым этой записи:                                          ║
║                                                                                                               ║
║   from django.views.generic.detail import DetailView                                                          ║
║   from .models import Bb, Rubric                                                                              ║
║                                                                                                               ║
║   class BbDetailView(DetailView):                                                                             ║
║       model = Bb                                                                                              ║
║                                                                                                               ║
║       def get_context_data(self, **kwargs):                                                                   ║
║       context = super().get_context_data(**kwargs)                                                            ║
║       context['rubrics'] = Rubric.objects.all()                                                               ║
║       return context                                                                                          ║
║                                                                                                               ║
║   Компактность кода контроллера обусловлена в том числе и тем, что он следует соглашениям. Так, в нем         ║
║   не указан путь к шаблону - значит, шаблон по умолчанию bboard\bb_detail.html                                ║
║       Маршрут:                                                                                                ║
║       ───────                                                                                                 ║
║   from .views import BbDetailView                                                                             ║
║                                                                                                               ║
║   urlpatterns = [                                                                                             ║
║       ...                                                                                                     ║
║       path('detail/<int:pk>/', BbDetailView.as_view(), name='detail'),                                        ║
║       ...                                                                                                     ║
║   ]                                                                                                           ║
║   Этот маршрут написан соответсвенно соглашениям - у URL-параметра, содержащего ключ записи, указано          ║
║   pk (по ум-ю)                                                                                                ║
║       Шаблон:                                                                                                 ║
║       ──────                                                                                                  ║
║                                                                                                               ║
║   {% extends "layout/basic.html" %}                                                                           ║
║   {% block title %}{{ bb.title }}{% endblock %}                                                               ║
║                                                                                                               ║
║   {% block content %}                                                                                         ║
║   <p> Рубрика: {{ bb.rubric.name }}</p>                                                                       ║
║   <h2>{{ bb.title }}</h2>                                                                                     ║
║   <p>{{ bb.content }}</p>                                                                                     ║
║   <p>Цена: {{ bb.price }}</p>                                                                                 ║
║   {% endblock %}                                                                                              ║
║                                                                                                               ║
║   По умолчанию класс BbDetailView создаст в контексте шаблона переменную bb, с найденной записью (унаследовано║
║   от DetailView)                                                                                              ║
║   В шаблонах bboard\index.html bboard\by_rubric.html ссылки на детальную инфу:                                ║
║                                                                                                               ║
║   <h2><a href="{% url 'detail' pk=bb.pk %}">{{ bb.title }}</a></h2>                                           ║
╚═══════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
